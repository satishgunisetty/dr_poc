[MASTER]
# Python code to ignore (glob patterns)
ignore=CVS,*.pyc,*.pyo,*.pyd,__pycache__,*.egg-info

# Add any Python module names here where you want to disable all warnings
disable=C0111,R0903,C0103,R0913,R0914,W0511,W0105,R0801,W1508

# Maximum number of characters on a single line
max-line-length=88

# Maximum number of locals for function / method body
max-locals=15

# Maximum number of arguments for function / method
max-args=5

# Maximum number of attributes for a class
max-attributes=7

# Minimum number of public methods for a class
min-public-methods=1

# Maximum number of public methods for a class
max-public-methods=20

# Regular expression which should only match function or class names
function-rgx=[a-z_][a-z0-9_]{2,50}$
class-rgx=[A-Z_][a-zA-Z0-9]+$

# Good variable names which should always be accepted
good-names=i,j,k,ex,Run,_,id,df

# Regular expression which should only match correct module level names
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$

[FORMAT]
# Maximum number of characters on a single line
max-line-length=88

[MESSAGES CONTROL]
# Disable specific warnings
disable=C0111,  # missing-docstring
        R0903,  # too-few-public-methods
        C0103,  # invalid-name
        R0913,  # too-many-arguments
        R0914,  # too-many-locals
        W0511,  # fixme
        W0105,  # pointless-string-statement
        R0801,  # duplicate-code
        W1508   # invalid-envvar-default

[REPORTS]
# Set the output format
output-format=text

# Include a brief explanation of each error
msg-template={path}:{line}: [{msg_id}({symbol}), {obj}] {msg}

[BASIC]
# Regular expression which should only match correct module level names
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# Regular expression which should only match correct class names
class-rgx=[A-Z_][a-zA-Z0-9]+$

# Regular expression which should only match correct function names
function-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression which should only match correct method names
method-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression which should only match correct instance attribute names
attr-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression which should only match correct argument names
argument-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression which should only match correct variable names
variable-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression which should only match correct list comprehension /
# generator expression variable names
inlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$

# Good variable names which should always be accepted
good-names=i,j,k,ex,Run,_,id,df

[SIMILARITIES]
# Minimum lines number of a similarity
min-similarity-lines=10

# Ignore imports when computing similarities
ignore-imports=yes

[TYPECHECK]
# List of module names for which member attributes should not be checked
ignored-modules=numpy,tensorflow,torch,cv2,sklearn

# List of classes names for which member attributes should not be checked
ignored-classes=SQLObject,optparse.Values,thread._local,_thread._local

# List of members which are set dynamically and missed by pylint inference system
generated-members=REQUEST,acl_users,aq_parent,objects,DoesNotExist,id,pk,_meta

[VARIABLES]
# A regular expression matching the beginning of the name of dummy variables
dummy-variables-rgx=_|dummy

# List of additional names to consider as builtins
additional-builtins=

[CLASSES]
ignore-iface-methods=isImplementedBy,deferred,extends,names,namesAndDescriptions,queryDescriptionFor,getBases,getDescriptionFor,getDoc,getName,getTaggedValue,getTaggedValueTags,isEqualOrExtendedBy,setTaggedValue,isImplementedByInstancesOf,adaptWith,is_implemented_by

[IMPORTS]
deprecated-modules=regsub,TERMIOS,Bastion,rexec

[DESIGN]
max-returns=6
max-branches=12
max-parents=7

[EXCEPTIONS]
overgeneral-exceptions=Exception
